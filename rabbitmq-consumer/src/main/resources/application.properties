# 应用名称
spring.application.name=rabbitmq-consumer
# Actuator Web 访问端口
management.server.port=8081
management.endpoints.jmx.exposure.include=*
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
# 应用服务 WEB 访问端口
server.port=8080

## rabbitMQ配置
logging.level.com.example.amqp=DEBUG
spring.rabbitmq.addresses=10.150.30.110:5672,10.150.30.110:5673,10.150.30.110:5674
spring.rabbitmq.username=root
spring.rabbitmq.password=root
spring.rabbitmq.virtual-host=ykq

## 消费者的配置
#spring.rabbitmq.listener.simple.acknowledge-mode=none
#spring.rabbitmq.listener.simple.acknowledge-mode=auto
#spring.rabbitmq.listener.simple.retry.enabled=true
#spring.rabbitmq.listener.simple.retry.max-attempts=3
#spring.rabbitmq.listener.simple.retry.max-interval=3000ms
#spring.rabbitmq.listener.simple.acknowledge-mode=manual

## 生产者的配置
#NONE值是禁用发布确认模式，是默认值
#CORRELATED值是发布消息成功到交换器后会触发回调方法，如1示例
#SIMPLE值经测试有两种效果，其一效果和CORRELATED值一样会触发回调方法，其二在发布消息成功后使用rabbitTemplate调用waitForConfirms或waitForConfirmsOrDie方法等待broker节点返回发送结果，根据返回结果来判定下一步的逻辑，要注意的点是waitForConfirmsOrDie方法如果返回false则会关闭channel，则接下来无法发送消息到broker;
#spring.rabbitmq.publisher-confirm-type=correlated
# 支持消息发送失败返回队列，默认为false
#spring.rabbitmq.publisher-returns=true

## 变量
mq.directQueue=ykq.direct
mq.directQueueE=ykq.direct.e
mq.directExchange=de
mq.directRouteKey=directRKey
mq.topicQueue=ykq.topic
mq.topicExchange=te
mq.topicRouteKey1=*.ykq.topic.key.*
mq.topicRouteKey2=#.ykq.topic.key.#
mq.headersQueue=ykq.headers
mq.headersExchange=he
mq.fanoutQueue1=ykq.fanout1
mq.fanoutQueue2=ykq.fanout2
mq.fanoutExchange=fe
mq.dlQueue=ykq.deadLetter
mq.dlExchange=dle
mq.dlRouteKey=#

mq.txToTxQueue=ykq.TX_TO_TX_QUEUE
mq.txToTxExchange=TX_TO_TX_EXCHANGE
mq.txToTxRouteKey=TX_TO_TX
